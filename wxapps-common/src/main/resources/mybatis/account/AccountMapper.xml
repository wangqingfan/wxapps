<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beixiao.account.repository.AccountDao" >
  <resultMap id="BaseResultMap" type="com.beixiao.account.domain.Account" >
    <id column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="account_type" property="accountType" jdbcType="TINYINT" />
    <result column="all_cash" property="allCash" jdbcType="DECIMAL" />
    <result column="availablel_cash" property="availablelCash" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="account_state" property="accountState" jdbcType="TINYINT" />
    <result column="last_mdf_time" property="lastMdfTime" jdbcType="TIMESTAMP" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    account_id, account_type, all_cash, availablel_cash, create_time, account_state, 
    last_mdf_time,account_id
  </sql>
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.beixiao.account.domain.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="allCash != null" >
        all_cash,
      </if>
      <if test="availablelCash != null" >
        availablel_cash,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="accountState != null" >
        account_state,
      </if>
      <if test="lastMdfTime != null" >
        last_mdf_time,
      </if>
      <if test="accountId != null and accountId != 0" >
        account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="allCash != null" >
        #{allCash,jdbcType=DECIMAL},
      </if>
      <if test="availablelCash != null" >
        #{availablelCash,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountState != null" >
        #{accountState,jdbcType=TINYINT},
      </if>
      <if test="lastMdfTime != null" >
        #{lastMdfTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountId != null and accountId != 0" >
        #{accountId,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.beixiao.account.domain.Account" >
    update account
    <set >
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="allCash != null" >
        all_cash = #{allCash,jdbcType=DECIMAL},
      </if>
      <if test="availablelCash != null" >
        availablel_cash = #{availablelCash,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountState != null" >
        account_state = #{accountState,jdbcType=TINYINT},
      </if>
      <if test="lastMdfTime != null" >
        last_mdf_time = #{lastMdfTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountId != null and accountId != 0" >
        account_id = #{accountId,jdbcType=TIMESTAMP},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>